"use strict";(self.webpackChunkjupyterlab_code_formatter=self.webpackChunkjupyterlab_code_formatter||[]).push([[705],{705:(t,e,o)=>{o.r(e),o.d(e,{default:()=>C});var r,s=o(897),a=o(501),n=o(629),i=o(277),c=o(310),l=o(406),d=o(67);!function(t){t.PLUGIN_NAME="jupyterlab_code_formatter",t.FORMAT_COMMAND=`${t.PLUGIN_NAME}:format`,t.FORMAT_ALL_COMMAND=`${t.PLUGIN_NAME}:format_all`,t.ICON_FORMAT_ALL_SVG='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 1792 1792"><path class="jp-icon3" d="M1473 929q7-118-33-226.5t-113-189t-177-131T929 325q-116-7-225.5 32t-192 110.5t-135 175T317 863q-7 118 33 226.5t113 189t177.5 131T862 1467q155 9 293-59t224-195.5t94-283.5zM1792 0l-349 348q120 117 180.5 272t50.5 321q-11 183-102 339t-241 255.5T999 1660L0 1792l347-347q-120-116-180.5-271.5T116 852q11-184 102-340t241.5-255.5T792 132q167-22 500-66t500-66z" fill="#626262"/></svg>',t.ICON_FORMAT_ALL="fa fa-superpowers",t.SETTINGS_SECTION=`${t.PLUGIN_NAME}:settings`,t.COMMAND_SECTION_NAME="Jupyterlab Code Formatter",t.PLUGIN_VERSION="1.6.1"}(r||(r={}));class h{constructor(t){this.working=!1,this.client=t}formatCode(t,e,o,r,s){return this.client.request("format"+(s?"?cached":""),"POST",JSON.stringify({code:t,notebook:r,formatter:e,options:o})).then((t=>JSON.parse(t)))}}class m extends h{constructor(t,e){super(t),this.notebookTracker=e}async formatAction(t,e){return this.formatCells(!0,t,e)}async formatSelectedCodeCells(t,e,o){return this.formatCells(!0,t,e,o)}async formatAllCodeCells(t,e,o){return this.formatCells(!1,t,e,o)}getCodeCells(t=!0,e){if(!this.notebookTracker.currentWidget)return[];const o=[];return(e=e||this.notebookTracker.currentWidget.content).widgets.forEach((r=>{"code"===r.model.type&&(t&&!e.isSelectedOrActive(r)||o.push(r))})),o}getNotebookType(){if(!this.notebookTracker.currentWidget)return null;const t=this.notebookTracker.currentWidget.content.model.sharedModel.metadata;return t?t.kernelspec&&t.kernelspec.language?t.kernelspec.language.toLowerCase():t.language_info&&t.language_info.codemirror_mode?t.language_info.codemirror_mode.name.toLowerCase():null:null}getDefaultFormatters(t){const e=this.getNotebookType();if(e){const o=t.preferences.default_formatter[e];if(o instanceof Array)return o;if(void 0!==o)return[o]}return[]}async getFormattersToUse(t,e){const o=this.getDefaultFormatters(t),r=void 0!==e?[e]:o;return 0===r.length&&await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error","Unable to find default formatters to use, please file an issue on GitHub."),r}async applyFormatters(t,e,o){var r;for(const s of e){if("noop"===s||"skip"===s)continue;const e=t.map((t=>t.model.sharedModel.source)),n=await this.formatCode(e,s,o[s],!0,o.cacheFormatters),i=!(null!==(r=o.suppressFormatterErrors)&&void 0!==r&&r);for(let o=0;o<t.length;++o){const r=t[o],s=e[o],c=n.code[o];r.model.sharedModel.source===s?c.error?i&&await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",c.error):r.model.sharedModel.source=c.code:i&&await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",`Cell value changed since format request was sent, formatting for cell ${o} skipped.`)}}}async formatCells(t,e,o,r){if(!this.working){try{this.working=!0;const s=this.getCodeCells(t,r);if(0===s.length)return void(this.working=!1);const a=await this.getFormattersToUse(e,o);await this.applyFormatters(s,a,e)}catch(t){await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",t)}this.working=!1}}applicable(t,e){const o=this.notebookTracker.currentWidget;return o&&e===o}}class u extends h{constructor(t,e){super(t),this.editorTracker=e}formatAction(t,e){if(this.working)return;const o=this.editorTracker.currentWidget;this.working=!0;const r=o.content.editor.model.sharedModel.source;this.formatCode([r],e,t[e],!1,t.cacheFormatters).then((t=>{if(t.code[0].error)return(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",t.code[0].error),void(this.working=!1);this.editorTracker.currentWidget.content.editor.model.sharedModel.source=t.code[0].code,this.working=!1})).catch((t=>{this.working=!1,(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",t)}))}applicable(t,e){const o=this.editorTracker.currentWidget;return o&&e===o}}var p=o(717),f=o(844);class g{constructor(t,e,o,s,a,n){this.app=t,this.tracker=e,this.editorTracker=n,this.palette=o,this.settingRegistry=s,this.menu=a,this.client=new class{request(t,e,o){const s=d.ServerConnection.makeSettings(),a=l.URLExt.join(s.baseUrl,r.PLUGIN_NAME,t);return d.ServerConnection.makeRequest(a,{body:o,method:e},s).then((t=>200!==t.status?t.text().then((()=>{throw new d.ServerConnection.ResponseError(t,t.statusText)})):t.text()))}getAvailableFormatters(t){return this.request("formatters"+(t?"?cached":""),"GET",null)}},this.notebookCodeFormatter=new m(this.client,this.tracker),this.fileEditorCodeFormatter=new u(this.client,this.editorTracker),this.setupSettings().then((()=>{this.setupAllCommands(),this.setupContextMenu(),this.setupWidgetExtension()}))}createNew(t,e){const o=new a.ToolbarButton({tooltip:"Format notebook",icon:new f.LabIcon({name:r.FORMAT_ALL_COMMAND,svgstr:r.ICON_FORMAT_ALL_SVG}),onClick:async()=>{await this.notebookCodeFormatter.formatAllCodeCells(this.config,void 0,t.content)}});return t.toolbar.insertAfter("cellType",this.app.commands.label(r.FORMAT_ALL_COMMAND),o),e.saveState.connect(this.onSave,this),new p.DisposableDelegate((()=>{o.dispose()}))}async onSave(t,e){"started"===e&&this.config.formatOnSave&&await this.notebookCodeFormatter.formatAllCodeCells(this.config)}setupWidgetExtension(){this.app.docRegistry.addWidgetExtension("Notebook",this)}setupContextMenu(){this.app.contextMenu.addItem({command:r.FORMAT_COMMAND,selector:".jp-Notebook"})}setupAllCommands(){this.client.getAvailableFormatters(this.config.cacheFormatters).then((t=>{const e=JSON.parse(t).formatters,o=[];Object.keys(e).forEach((t=>{if(e[t].enabled){const s=`${r.PLUGIN_NAME}:${t}`;this.setupCommand(t,e[t].label,s),o.push({command:s})}})),this.menu.editMenu.addGroup(o)})),this.app.commands.addCommand(r.FORMAT_COMMAND,{execute:async()=>{await this.notebookCodeFormatter.formatSelectedCodeCells(this.config)},label:"Format cell"}),this.app.commands.addCommand(r.FORMAT_ALL_COMMAND,{execute:async()=>{await this.notebookCodeFormatter.formatAllCodeCells(this.config)},iconClass:r.ICON_FORMAT_ALL,iconLabel:"Format notebook"})}async setupSettings(){const t=await this.settingRegistry.load(r.SETTINGS_SECTION),e=t=>{this.config=t.composite};t.changed.connect(e),e(t)}setupCommand(t,e,o){this.app.commands.addCommand(o,{execute:async()=>{for(const e of[this.notebookCodeFormatter,this.fileEditorCodeFormatter])e.applicable(t,this.app.shell.currentWidget)&&await e.formatAction(this.config,t)},isVisible:()=>{for(const e of[this.notebookCodeFormatter,this.fileEditorCodeFormatter])if(e.applicable(t,this.app.shell.currentWidget))return!0;return!1},label:e}),this.palette.addItem({command:o,category:r.COMMAND_SECTION_NAME})}}const C={id:r.PLUGIN_NAME,autoStart:!0,requires:[a.ICommandPalette,s.INotebookTracker,n.ISettingRegistry,i.IMainMenu,c.IEditorTracker],activate:(t,e,o,r,s,a)=>{new g(t,o,e,r,s,a),console.log("JupyterLab extension jupyterlab_code_formatter is activated!")}}}}]);